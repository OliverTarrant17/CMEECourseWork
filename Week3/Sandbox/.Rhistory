# plot the data
p <- gglot(my_data, aes(x=x, y=y, colour = abs(my_lm$residuals)))
# plot the data
p <- ggplot(my_data, aes(x=x, y=y, colour = abs(my_lm$residuals)))
p
# plot the data
p <- ggplot(my_data, aes(x=x, y=y, colour = abs(my_lm$residuals))
)+ geom_point() +
scale_color_gradient(low = "black", high = "red") +
theme(legend.position = "none") +
scale_x_continuous(expression(alpha^2 * pi / beta * sqrt(Theta)))
# plot the data
p <- ggplot(my_data, aes(x=x, y=y, colour = abs(my_lm$residuals))
)+ geom_point() +
scale_color_gradient(low = "black", high = "red") +
theme(legend.position = "none") +
scale_x_continuous(expression(alpha^2 * pi / beta * sqrt(Theta)))
p
# add the regression line
p <- p + geom_abline(
intercept = my_lm$coefficients[1][1],
slope = my_lm$coefficients[2][1],
colour = "yellow")
p
getwd
getwd()
setwd("../../Week3/Code")
setwd("../Sandbox/")
source("Case_study_4.R")
source("Case_study_4.R")
Data <- read.csv("../Data/EcolArchives-E089-51-D1.csv") # loads the data
class(Data)
head(Data)
rm(list = ls())
require(ggplot2)
require(plyr) # load packages
Data <- read.csv("../Data/EcolArchives-E089-51-D1.csv") # loads the data
head(Data)
my_lm <- lm(log(Predator.mass)~log(Prey.mass)*Type.of.feeding.interaction*Predator.lifestage, data = Data)
summary(my_lm)
model <- function(x)lm(log(Predator.mass)~log(Prey.mass), data = x)
fitted.model <- dlply(Data, .(Type.of.feeding.interaction, Predator.lifestage), model)
a = ldply(fitted.model, coef)
b = ldply(fitted.model, function(x) summary(x)$fstatistic) #put r.sqaured in here for the r^2
c = ldply(fitted.model, function(x) summary(x)$coefficients)
p <- ggplot(Data, aes(x=log(Prey.mass), y =log(Predator.mass), colour = Predator.lifestage))
p <- p + geom_point(shape=I(3))
p <- p + facet_grid(Type.of.feeding.interaction ~.)
p <- p + theme(legend.position = "bottom")
p <- p + scale_x_continuous("Prey mass in grams") + scale_y_continuous("Predator mass in grams")
p <- p + theme(legend.title = element_text(face="bold"))
p <- p + geom_smooth(method= "lm", fullrange=TRUE)
p
plot(my_lm)
summary(my_lm)
p <- ggplot(Data, aes(x=log(Prey.mass), y =log(Predator.mass), colour = Predator.lifestage))
p
p <- p + geom_point(shape=I(3))
p
p <- p + facet_grid(Type.of.feeding.interaction ~.)
p
p <- p + theme(legend.position = "bottom")
p
p <- p + theme(legend.title = element_text(face="bold"))
p
rm(list = ls())
dev.off()
rm(list = ls())
require(ggplot2)
require(plyr) # load packages
Data <- read.csv("../Data/EcolArchives-E089-51-D1.csv") # loads the data
p <- ggplot(Data, aes(x=log(Prey.mass), y =log(Predator.mass), colour = Predator.lifestage))
p <- p + geom_point(shape=I(3)) # plotting the points
p <- p + facet_grid(Type.of.feeding.interaction ~.) # seperate plot into different feeding interactions
p <- p + theme(legend.position = "bottom") # plots legend at the bottom
p <- p + theme(legend.title = element_text(face="bold"))# Makes legend title bold
p <- p + scale_x_continuous("Prey mass in grams",trans = "log10") +
scale_y_continuous("Predator mass in grams", trans = "log10")
#plotting the axis
p <- p + geom_smooth(method= "lm", fullrange=TRUE) # plots regression lines
p
rm(list = ls())
require(ggplot2)
require(plyr) # load packages
Data <- read.csv("../Data/EcolArchives-E089-51-D1.csv") # loads the data
p <- ggplot(Data, aes(x=log(Prey.mass), y =log(Predator.mass), colour = Predator.lifestage))
p <- p + geom_point(shape=I(3)) # plotting the points
p <- p + facet_grid(Type.of.feeding.interaction ~.) # seperate plot into different feeding interactions
p <- p + theme(legend.position = "bottom") # plots legend at the bottom
p <- p + theme(legend.title = element_text(face="bold"))# Makes legend title bold
p <- p + scale_x_continuous("Prey mass in grams",trans = "log") +
scale_y_continuous("Predator mass in grams", trans = "log")
#plotting the axis
p <- p + geom_smooth(method= "lm", fullrange=TRUE) # plots regression lines
p
rm(list = ls())
require(ggplot2)
require(plyr) # load packages
Data <- read.csv("../Data/EcolArchives-E089-51-D1.csv") # loads the data
p <- ggplot(Data, aes(x=log(Prey.mass), y =log(Predator.mass), colour = Predator.lifestage))
p <- p + geom_point(shape=I(3)) # plotting the points
p <- p + facet_grid(Type.of.feeding.interaction ~.) # seperate plot into different feeding interactions
p <- p + theme(legend.position = "bottom") # plots legend at the bottom
p <- p + theme(legend.title = element_text(face="bold"))# Makes legend title bold
p <- p + scale_x_continuous("Prey mass in grams") +
scale_y_continuous("Predator mass in grams")
#plotting the axis
p <- p + geom_smooth(method= "lm", fullrange=TRUE) # plots regression lines
p
p <- p + scale_x_continuous("Prey mass in grams", trans = "log") +
scale_y_continuous("Predator mass in grams")
#plotting the axis
p <- p + geom_smooth(method= "lm", fullrange=TRUE) # plots regression lines
p
p <- p + scale_x_continuous("Prey mass in grams") +
scale_y_continuous("Predator mass in grams", trans = "log")
p
p <- p + scale_x_continuous("Prey mass in grams", trans = "log") +
scale_y_continuous("Predator mass in grams", trans = "log")
p
p <- p + scale_x_continuous("Prey mass in grams", trans = "log10") +
scale_y_continuous("Predator mass in grams", trans = "log10")
#plotting the axis
p <- p + geom_smooth(method= "lm", fullrange=TRUE) # plots regression lines
p
p <- ggplot(Data, aes(x=log(Prey.mass), y =log(Predator.mass), colour = Predator.lifestage))
p <- p + geom_point(shape=I(3)) # plotting the points
p <- p + facet_grid(Type.of.feeding.interaction ~.) # seperate plot into different feeding interactions
p <- p + theme(legend.position = "bottom") # plots legend at the bottom
p <- p + theme(legend.title = element_text(face="bold"))# Makes legend title bold
p <- p + scale_x_continuous("Prey mass in grams", trans = "log10") +
scale_y_continuous("Predator mass in grams", trans = "log10")
#plotting the axis
p <- p + geom_smooth(method= "lm", fullrange=TRUE) # plots regression lines
p
p <- p + scale_x_continuous("Prey mass in grams") +
scale_y_continuous("Predator mass in grams", trans = "log10")
#plotting the axis
p <- p + geom_smooth(method= "lm", fullrange=TRUE) # plots regression lines
p
p <- ggplot(Data, aes(x=Prey.mass, y =Predator.mass, colour = Predator.lifestage))
p <- p + geom_point(shape=I(3)) # plotting the points
p <- p + facet_grid(Type.of.feeding.interaction ~.) # seperate plot into different feeding interactions
p <- p + theme(legend.position = "bottom") # plots legend at the bottom
p <- p + theme(legend.title = element_text(face="bold"))# Makes legend title bold
p <- p + scale_x_continuous("Prey mass in grams") +
scale_y_continuous("Predator mass in grams", trans = "log10")
#plotting the axis
p <- p + geom_smooth(method= "lm", fullrange=TRUE) # plots regression lines
p
p <- p + scale_x_continuous("Prey mass in grams", trans = "log10") +
scale_y_continuous("Predator mass in grams", trans = "log10")
p
require(ggplot2)
require(reshape2)
GenerateMatrix <- function(N) {
M <- matrux(runif(N*N),N,N)
return(M)
}
M <- GenerateMatrix(10)
M[1:3,1:3]
Melt <- melt(M)
Melt[1:4,]
ggplot(Melt, aes(Var1,Var2,fill=value)) +geom_tile()
p <- ggplot(Melt, aes(Var1,Var2,fill = value))
require(ggplot2)
require(reshape2)
GenerateMatrix <- function(N) {
M <- matrux(runif(N*N),N,N)
return(M)
}
M <- GenerateMatrix(10)
require(ggplot2)
require(reshape2)
GenerateMatrix <- function(N) {
M <- matrix(runif(N*N),N,N)
return(M)
}
M <- GenerateMatrix(10)
M[1:3,1:3]
Melt <- melt(M)
Melt[1:4,]
ggplot(Melt, aes(Var1,Var2,fill=value)) +geom_tile()
p <- ggplot(Melt, aes(Var1,Var2,fill = value))
p <- p +geom_tile(colour ="black")
q <- p + theme(legend.position = "none")
q <- p + theme(legend.position = "none",
panel.background = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank())
q
rm(list = ls())
require(ggplot2)
require(plyr) # load packages
Data <- read.csv("../Data/EcolArchives-E089-51-D1.csv") # loads the data
p <- ggplot(Data, aes(x=Prey.mass, y =Predator.mass, colour = Predator.lifestage))
p <- p + geom_point(shape=I(3)) # plotting the points
p <- p + facet_grid(Type.of.feeding.interaction ~.) # seperate plot into different feeding interactions
p <- p + theme(legend.position = "bottom") # plots legend at the bottom
p <- p + theme(legend.title = element_text(face="bold"))# Makes legend title bold
p <- p + scale_x_continuous("Prey mass in grams", trans = "log10") +
scale_y_continuous("Predator mass in grams", trans = "log10")
p
#plotting the axis
p <- p + theme(panel.backround = element_blank())
#plotting the axis
p <- p + theme(panel.background = element_blank())
p
#plotting the axis
p <- p + theme(panel.background = element_blank(), panel.grid.major = TRUE)
#plotting the axis
p <- p + theme(panel.background = element_blank(), panel.grid.major = element_line(colour = "grey"))
p
#plotting the axis
p <- p + theme(panel.background = element_rect(fill = "white", colour = "grey"), panel.grid.major = element_line(colour = "grey"))
p
#plotting the axis
p <- p + theme(panel.background = element_rect(fill = "white", colour = "black"), panel.grid.major = element_line(colour = "grey"))
p
p <- p + theme(axis.text = element_text(face = "bold"))
p
p <- p + geom_smooth(method= "lm", fullrange=TRUE) # plots regression lines
p
plot(my_lm)
########### Regression results ###########
my_lm <- lm(log(Predator.mass)~log(Prey.mass)*Type.of.feeding.interaction*Predator.lifestage, data = Data)
plot(my_lm)
a
########### Regression results ###########
my_lm <- lm(log(Predator.mass)~log(Prey.mass)*Type.of.feeding.interaction*Predator.lifestage, data = Data)
model <- function(x)lm(log(Predator.mass)~log(Prey.mass), data = x)
View(model)
View(model)
View(model)
model(Data)
fitted.model <- dlply(Data, .(Type.of.feeding.interaction, Predator.lifestage), model)
a = ldply(fitted.model, coef)
a
.(Data$Type.of.feeding.interaction,Data$Predator.lifestage)
b = ldply(fitted.model, function(x) summary(x)$fstatistic) #put r.sqaured in here for the r^2
b
c = ldply(fitted.model, function(x) summary(x)$coefficients)
c
fitted.model <- dlply(Data, .(Type.of.feeding.interaction, Predator.lifestage), model)
fitted.model
# applies the model() to all subsets of Data, these have been seperated by Type.of.feeding.interaction and
# predator.lifestage
a = ldply(fitted.model, coef) # returns all the coefficients from the fitted model
p <- ggplot(Data, aes(x=Prey.mass, y =Predator.mass, colour = Predator.lifestage))
p <- p + geom_point(shape=I(3)) # plotting the points
p <- p + facet_grid(Type.of.feeding.interaction ~.) # seperate plot into different feeding interactions
p <- p + theme(legend.position = "bottom") # plots legend at the bottom
p <- p + theme(legend.title = element_text(face="bold"))# Makes legend title bold
p <- p + scale_x_continuous("Prey mass in grams", trans = "log10") +
scale_y_continuous("Predator mass in grams", trans = "log10")
p
rm(list = ls())
require(ggplot2)
require(plyr) # load packages
Data <- read.csv("../Data/EcolArchives-E089-51-D1.csv") # loads the data
p <- ggplot(Data, aes(x=Prey.mass, y =Predator.mass, colour = Predator.lifestage))
p <- p + geom_point(shape=I(3)) # plotting the points
p <- p + facet_grid(Type.of.feeding.interaction ~.) # seperate plot into different feeding interactions
p <- p + theme(legend.position = "bottom") # plots legend at the bottom
p <- p + theme(legend.title = element_text(face="bold"))# Makes legend title bold
p <- p + scale_x_continuous("Prey mass in grams", trans = "log10") +
scale_y_continuous("Predator mass in grams", trans = "log10")
#plotting the axis
p <- p + theme(panel.background = element_rect(fill = "white", colour = "black"),
panel.grid.major = element_line(colour = "grey"))
# Sorts out background and gridlines
p <- p + theme(axis.text = element_text(face = "bold")) # Makes axis text bold
p <- p + geom_smooth(method= "lm", fullrange=TRUE) # plots regression lines
p
model <- function(x){
lm(log(Predator.mass)~log(Prey.mass), data = x)
} # defines a linear model between Pred mass and Prey mass from the specified data x
fitted.model <- dlply(Data, .(Type.of.feeding.interaction, Predator.lifestage), model)
# applies the model() to all subsets of Data, these have been seperated by Type.of.feeding.interaction and
# predator.lifestage
a = ldply(fitted.model, coef) # returns all the coefficients from the fitted model
a
c = ldply(fitted.model, function(x) summary(x)$coefficients)
c
b
b = ldply(fitted.model, function(x) summary(x)$fstatistic) #put r.sqaured in here for the r^2
b
lm(log(Predator.mass)~log(Prey.mass), data = x)
model <- function(x){
lm(log(Predator.mass)~log(Prey.mass), data = x)
} # defines a linear model between Pred mass and Prey mass from the specified data x
########### Regression results ###########
my_lm <- lm(log(Predator.mass)~log(Prey.mass)*Type.of.feeding.interaction*Predator.lifestage, data = Data)
my_lm
summary(my_lm)
# provides a linear model of log pred mass against log prey mass
# * feeding interaction and lifestage
sum <- summary(my_lm)
a <- sum$coefficients
a
a[1]
a[1,]
a[,1]
b <- sum$r.squared
b
b
c <- sum$fstatistic
c
pdf("../Results/Pred_Regress.pdf", 11.7, 8.3)
rm(list = ls())
require(ggplot2)
require(plyr) # load packages
Data <- read.csv("../Data/EcolArchives-E089-51-D1.csv") # loads the data
p <- ggplot(Data, aes(x=Prey.mass, y =Predator.mass, colour = Predator.lifestage))
p <- p + geom_point(shape=I(3)) # plotting the points
p <- p + facet_grid(Type.of.feeding.interaction ~.) # seperate plot into different feeding interactions
p <- p + theme(legend.position = "bottom") # plots legend at the bottom
p <- p + theme(legend.title = element_text(face="bold"))# Makes legend title bold
p <- p + scale_x_continuous("Prey mass in grams", trans = "log10") +
scale_y_continuous("Predator mass in grams", trans = "log10")
#plotting the axis
p <- p + theme(panel.background = element_rect(fill = "white", colour = "black"),
panel.grid.major = element_line(colour = "grey"))
# Sorts out background and gridlines
p <- p + theme(axis.text = element_text(face = "bold")) # Makes axis text bold
p <- p + geom_smooth(method= "lm", fullrange=TRUE) # plots regression lines
pdf("../Results/Pred_Regress.pdf", 11.7, 8.3)
print(p)
dev.off()
b <- sum$r.squared
########### Regression results ###########
my_lm <- lm(log(Predator.mass)~log(Prey.mass)*Type.of.feeding.interaction*Predator.lifestage, data = Data)
# provides a linear model of log pred mass against log prey mass
# * feeding interaction and lifestage
sum <- summary(my_lm)
a <- sum$coefficients
b <- sum$r.squared
c <- sum$fstatistic
b
b <- my_lm$fitted.values
head(b)
b
b <- my_lm$terms
b
# applies the model() to all subsets of Data, these have been seperated by Type.of.feeding.interaction and
# predator.lifestage
#a = ldply(fitted.model, coef) # returns all the coefficients from the fitted model
b = ldply(fitted.model, function(x) summary(x)$fstatistic) #put r.sqaured in here for the r^2
model <- function(x){
lm(log(Predator.mass)~log(Prey.mass), data = x)
} # defines a linear model between Pred mass and Prey mass from the specified data x
fitted.model <- dlply(Data, .(Type.of.feeding.interaction, Predator.lifestage), model)
# applies the model() to all subsets of Data, these have been seperated by Type.of.feeding.interaction and
# predator.lifestage
#a = ldply(fitted.model, coef) # returns all the coefficients from the fitted model
b = ldply(fitted.model, function(x) summary(x)$fstatistic) #put r.sqaured in here for the r^2
b
# applies the model() to all subsets of Data, these have been seperated by Type.of.feeding.interaction and
# predator.lifestage
a = ldply(fitted.model, coef) # returns all the coefficients from the fitted model
a
b
a$f_statistic = ldply(fitted.model, function(x) summary(x)$fstatistic) #put r.sqaured in here for the r^2
a
### Practical 9.2
rm(list = ls())
library(lattice) # load the lattice library
MyDF <- read.csv("../Data/EcolArchives-E089-51-D1.csv") # read the data set
########### Plots#############
# Predator size lattice
graphics.off() # close all previous graphics
pdf("../Results/Pred_Lattice.pdf",11.7,8.3)
# Open blank pdf and set page size
densityplot(~log(Predator.mass), data = MyDF,
xlab = "log Predator Mass (kg)",
ylab = "Density", main = "Predator mass",
col="purple")
# plots the lattice graph of log of the predators mass from MyDF,
# with the given titles and plotted in red
dev.off() # close the device so don't overlay plots the file
# Prey size lattice
graphics.off()
pdf("../Results/Prey_Lattice.pdf",11.7,8.3)
densityplot(~log(Prey.mass), data = MyDF,
xlab = "log Prey Mass (kg)", ylab = "Density",
main = "Prey mass",col="green")
dev.off() # Same plotting method as above but in green
# Predator/Prey size ratio lattice
graphics.off()
pdf("../Results/SizeRatio_Lattice.pdf",11.7,8.3)
densityplot(~(log(Predator.mass/Prey.mass),
main = "Predator prey size ratio",col="red")
# Predator/Prey size ratio lattice
graphics.off()
pdf("../Results/SizeRatio_Lattice.pdf",11.7,8.3)
densityplot(~(log(Predator.mass/Prey.mass),
data = MyDF, xlab = "Size ratio", ylab = "Density",
main = "Predator prey size ratio", col="red"))
# Predator/Prey size ratio lattice
graphics.off()
pdf("../Results/SizeRatio_Lattice.pdf",11.7,8.3)
densityplot(~(log(Predator.mass/Prey.mass)),
data = MyDF, xlab = "Size ratio", ylab = "Density",
main = "Predator prey size ratio", col="red")
dev.off() # Same plotting method as above but plotting the predator mass/prey mass and plotting in red
########## PP_Results#############
### Creating a csv file of the means and medians of prey, predator masses and predator
### prey size ratio, stratified by feeding type
# mean log predator mass
Pred_mass_mean <- tapply(log(MyDF$Predator.mass) , MyDF$Type.of.feeding.interaction,mean)
Pred_mass_mean
New_DF <- c(Prey_mass_med)
########## PP_Results#############
### Creating a csv file of the means and medians of prey, predator masses and predator
### prey size ratio, stratified by feeding type
# mean log predator mass
Pred_mass_mean <- tapply(log(MyDF$Predator.mass) , MyDF$Type.of.feeding.interaction,mean) # applies the given functions to the stated data seperated by the given variables
Pred_mass_med <- tapply(log(MyDF$Predator.mass), MyDF$Type.of.feeding.interaction, median)
Prey_mass_mean <- tapply(log(MyDF$Prey.mass) , MyDF$Type.of.feeding.interaction,mean)
Prey_mass_med <- tapply(log(MyDF$Prey.mass), MyDF$Type.of.feeding.interaction, median)
Ratio_mean <- tapply((log(MyDF$Predator.mass)/log(MyDF$Prey.mass)),MyDF$Type.of.feeding.interaction,mean)
Ratio_med <- tapply((log(MyDF$Predator.mass)/log(MyDF$Prey.mass)),MyDF$Type.of.feeding.interaction,median)
New_DF <- c(Prey_mass_med)
New_DF <- c(Prey_mass_med,Pred_mass_mean)
New_DF
New_DF <- as.data.frame(c(Pred_mass_mean,Pred_mass_med), row.names = c(Pred_mass_mean,Pred_mass_med))
New_DF <- as.data.frame(c(Pred_mass_mean,Pred_mass_med), row.names = Type.of.feeding.interaction)
New_DF <- as.data.frame(c(Pred_mass_mean,Pred_mass_med), row.names = MyDF$Type.of.feeding.interaction)
New_DF <- as.data.frame(c(Pred_mass_mean,Pred_mass_med))
New_DF
New_DF <- data.frame(Pred_mass_mean,Pred_mass_med)
New_DF
New_DF <- data.frame(Pred_mass_mean,Pred_mass_med,Prey_mass_mean,Prey_mass_med,Ratio_mean,Ratio_med) # Creating a dataframe with the results
New_DF
########## PP_Results#############
### Creating a csv file of the means and medians of prey, predator masses and predator
### prey size ratio, stratified by feeding type
# mean log predator mass
Predator_mass_mean <- tapply(log(MyDF$Predator.mass) , MyDF$Type.of.feeding.interaction,mean) # applies the given functions to the stated data seperated by the given variables
Predator_mass_median <- tapply(log(MyDF$Predator.mass), MyDF$Type.of.feeding.interaction, median)
Prey_mass_mean <- tapply(log(MyDF$Prey.mass) , MyDF$Type.of.feeding.interaction,mean)
Prey_mass_median <- tapply(log(MyDF$Prey.mass), MyDF$Type.of.feeding.interaction, median)
Ratio_mean <- tapply((log(MyDF$Predator.mass)/log(MyDF$Prey.mass)),MyDF$Type.of.feeding.interaction,mean)
Ratio_median <- tapply((log(MyDF$Predator.mass)/log(MyDF$Prey.mass)),MyDF$Type.of.feeding.interaction,median)
New_DF <- data.frame(Predator_mass_mean,Predator_mass_median,Prey_mass_mean,Prey_mass_median,Ratio_mean,Ratio_median) # Creating a dataframe with the results
write.csv(New_DF,"../Results/PP_Results.csv")
write.csv(New_DF,"../Results/PP_Results.csv", col.names = c(a,b,c,d,e,f))
write.csv(New_DF,"../Results/PP_Results.csv", col.names = c(a,b,c,d,e,f))
write.csv(New_DF,"../Results/PP_Results.csv", col.names = c(a,b,c,d,e,f,g))
write.csv(New_DF,"../Results/PP_Results.csv", col.names = c(a,b,c,d,e,f,g))
write.csv(New_DF,"../Results/PP_Results.csv", col.names = c("a","b","c","d","e","f","g"))
write.csv(New_DF,"../Results/PP_Results.csv", col.names = ("a","b","c","d","e","f","g"))
fitted.model <- dlply(Data, c(Type.of.feeding.interaction, Predator.lifestage), model)
rm(list = ls())
require(ggplot2)
require(plyr) # load packages
Data <- read.csv("../Data/EcolArchives-E089-51-D1.csv") # loads the data
p <- ggplot(Data, aes(x=Prey.mass, y =Predator.mass, colour = Predator.lifestage))
p <- p + geom_point(shape=I(3)) # plotting the points
p <- p + facet_grid(Type.of.feeding.interaction ~.) # seperate plot into different feeding interactions
p <- p + theme(legend.position = "bottom") # plots legend at the bottom
p <- p + theme(legend.title = element_text(face="bold"))# Makes legend title bold
p <- p + scale_x_continuous("Prey mass in grams", trans = "log10") +
scale_y_continuous("Predator mass in grams", trans = "log10")
#plotting the axis
p <- p + theme(panel.background = element_rect(fill = "white", colour = "black"),
panel.grid.major = element_line(colour = "grey"))
# Sorts out background and gridlines
p <- p + theme(axis.text = element_text(face = "bold")) # Makes axis text bold
p <- p + geom_smooth(method= "lm", fullrange=TRUE) # plots regression lines
pdf("../Results/Pred_Regress.pdf", 11.7, 8.3)
print(p)
dev.off()
########### Regression results ###########
my_lm <- lm(log(Predator.mass)~log(Prey.mass)*Type.of.feeding.interaction*Predator.lifestage, data = Data)
# provides a linear model of log pred mass against log prey mass
# * feeding interaction and lifestage
sum <- summary(my_lm)
a <- sum$coefficients
b <- my_lm$terms
c <- sum$fstatistic
model <- function(x){
lm(log(Predator.mass)~log(Prey.mass), data = x)
} # defines a linear model between Pred mass and Prey mass from the specified data x
fitted.model <- dlply(Data, c(Type.of.feeding.interaction, Predator.lifestage), model)
# applies the model() to all subsets of Data, these have been seperated by Type.of.feeding.interaction and
# predator.lifestage
a = ldply(fitted.model, coef) # returns all the coefficients from the fitted model
fitted.model <- dlply(Data, c(Type.of.feeding.interaction, Predator.lifestage), model)
fitted.model <- dlply(Data, c(Data$Type.of.feeding.interaction, Data$Predator.lifestage), model)
fitted.model
fitted.model <- dlply(Data, .(Type.of.feeding.interaction, Predator.lifestage), model)
fitted.model
fitted.model$`insectivorous.larva / juvenile`
fitted.model$coef
summary(fitted.model)
summary(fitted.model$`insectivorous.larva / juvenile`)
summary(fitted.model)$coefficients
summary(fitted.model$coef)
summary(fitted.model)
summary(fitted.model$`insectivorous.larva / juvenile`)
summary(fitted.model$`insectivorous.larva / juvenile`)$coef
summary(fitted.model$`insectivorous.larva / juvenile`)$fstatistic
summary(fitted.model$`insectivorous.larva / juvenile`)$coeficients
summary(fitted.model$`insectivorous.larva / juvenile`)$coeficient
summary(fitted.model$`insectivorous.larva / juvenile`)$coefficients
summary(fitted.model$`insectivorous.larva / juvenile`)$coef
